#pragma once

#include <cstdint>

#include "CExoArrayListTemplatedCFeatUseListEntryPtr.hpp"
#include "CExoArrayListTemplatedCNWLevelStatsPtr.hpp"
#include "CExoArrayListTemplatedshortunsignedint.hpp"
#include "CExoLocString.hpp"
#include "CExoString.hpp"
#include "CNWSCreatureStats_ClassInfo.hpp"
#include "CResRef.hpp"

namespace NWNXLib {

namespace API {

// Forward class declarations (defined in the source file)
struct CCombatInformation;
struct CExoArrayListTemplatedCNWSStats_SpellLikeAbility;
struct CExoArrayListTemplatedunsignedshort;
struct CNWClass;
struct CNWCreatureStatsUpdate;
struct CNWLevelStats;
struct CNWSCreature;
struct CNWSCreatureAppearanceInfo;
struct CNWSItem;
struct CNWSObject;
struct CNWSpell;
struct CResGFF;
struct CResStruct;

struct CNWSCreatureStats
{
    CExoArrayListTemplatedshortunsignedint m_lstFeats;
    CExoArrayListTemplatedCFeatUseListEntryPtr m_lstFeatUses;
    CExoArrayListTemplatedshortunsignedint m_lstBonusFeats;
    CNWSCreature* m_pBaseCreature;
    CExoArrayListTemplatedCNWLevelStatsPtr m_lstLevelStats;
    CExoLocString m_lsFirstName;
    CExoLocString m_lsLastName;
    CResRef m_cDialog;
    int32_t m_bDialogInterruptable;
    CExoLocString m_sDescription;
    CExoString m_sDescriptionOverride;
    int32_t m_nAge;
    uint8_t m_nGender;
    uint32_t m_nExperience;
    int32_t m_bIsPC;
    int32_t m_bIsDM;
    int32_t m_bIsDMFile;
    int32_t m_bIsAIDisabledPossess;
    int32_t m_bIsAIDisabledOverride;
    int32_t m_bDMManifested;
    uint8_t m_nMultiClassLeveledUpIn;
    int32_t m_nFactionId;
    int32_t m_nOriginalFactionId;
    int32_t m_nPreDominationFactionId;
    float m_fChallengeRating;
    uint8_t m_nStartingPackage;
    uint8_t m_nNumMultiClasses;
    CNWSCreatureStats_ClassInfo m_ClassInfo[3];
    uint16_t m_nRace;
    CExoString m_sSubRace;
    uint8_t m_nStrengthBase;
    char m_nStrengthModifier;
    uint8_t m_nDexterityBase;
    char m_nDexterityModifier;
    uint8_t m_nConstitutionBase;
    char m_nConstitutionModifier;
    uint8_t m_nIntelligenceBase;
    char m_nIntelligenceModifier;
    uint8_t m_nWisdomBase;
    char m_nWisdomModifier;
    uint8_t m_nCharismaBase;
    char m_nCharismaModifier;
    char m_nACNaturalBase;
    char m_nACArmorBase;
    char m_nACShieldBase;
    char m_nACArmorMod;
    char m_nACArmorNeg;
    char m_nACDeflectionMod;
    char m_nACDeflectionNeg;
    char m_nACShieldMod;
    char m_nACShieldNeg;
    char m_nACNaturalMod;
    char m_nACNaturalNeg;
    char m_nACDodgeMod;
    char m_nACDodgeNeg;
    uint8_t m_nBaseAttackBonus;
    uint8_t m_nOverrideBaseAttackBonus;
    char m_nEnemyAttackBonus;
    char* m_nDamageImmunity;
    int32_t m_nDamageRoll;
    int32_t m_nCriticalHitRoll;
    int32_t m_nCriticalHitMultiplier;
    uint8_t m_nAttacksPerRound;
    CCombatInformation* m_pCombatInformation;
    char m_nArcaneSpellFailure;
    uint8_t m_nBaseArmorArcaneSpellFailure;
    uint8_t m_nBaseShieldArcaneSpellFailure;
    uint8_t m_pSpellFailure[9];
    char m_nSpellResistance;
    char m_nSpellResistancePenalty;
    CExoArrayListTemplatedCNWSStats_SpellLikeAbility* m_pSpellLikeAbilityList;
    uint16_t m_nTempHitpointsPtr;
    uint16_t m_nACVersusPtr;
    uint16_t m_nAttackBonusPtr;
    uint16_t m_nDamageReductionPtr;
    uint16_t m_nDamageResistancePtr;
    uint16_t m_nDamageBonusPtr;
    uint16_t m_nAIStatePtr;
    uint16_t m_nEffectIconPtr;
    uint16_t m_nSanctuaryPtr;
    uint16_t m_nInvisibilityPtr;
    uint16_t m_nSpellResistancePtr;
    uint16_t m_nAbilityPtr;
    uint16_t m_nSeeInvisiblePtr;
    uint16_t m_nUltraVisionPtr;
    uint16_t m_nMissChancePtr;
    uint16_t m_nConcealmentPtr;
    uint16_t m_nBlindnessPtr;
    uint16_t m_nWalkAnimationPtr;
    uint16_t m_nSpellLevelAbsorptionPtr;
    uint16_t m_nSpellImmunityPtr;
    uint16_t m_nDamageShieldPtr;
    uint16_t m_nSkillBonusPtr;
    uint16_t m_nSavingThrowBonusPtr;
    uint16_t m_nHastePtr;
    uint16_t m_nEffectImmunityPtr;
    uint16_t m_nLimitMovementSpeedPtr;
    uint16_t m_nMovementSpeedDecreasePtr;
    uint16_t m_nSkillPointsRemaining;
    char* m_lstSkillRanks;
    char m_nArmorCheckPenalty;
    char m_nShieldCheckPenalty;
    CResRef m_cPortrait;
    int16_t m_nAlignmentGoodEvil;
    int16_t m_nAlignmentLawChaos;
    uint8_t m_nSkinColor;
    uint8_t m_nHairColor;
    uint8_t m_nTattoo1Color;
    uint8_t m_nTattoo2Color;
    uint16_t m_nAppearanceType;
    uint8_t m_nPhenoType;
    uint8_t m_nHeadVariation;
    uint8_t m_pPartVariation[19];
    uint32_t m_nTailVariation;
    uint32_t m_nWingVariation;
    int32_t m_nMovementRate;
    float m_fMovementRunSpeed;
    float m_fMovementWalkSpeed;
    char m_nFortSavingThrowMisc;
    char m_nWillSavingThrowMisc;
    char m_nReflexSavingThrowMisc;
    int32_t m_nAnimalCompanionCreatureType;
    int32_t m_nFamiliarCreatureType;
    CExoString m_sAnimalCompanionName;
    CExoString m_sFamiliarName;
    CExoString m_sDeity;

    // The below are auto generated stubs.
    CNWSCreatureStats() = default;
    CNWSCreatureStats(const CNWSCreatureStats&) = default;
    CNWSCreatureStats& operator=(const CNWSCreatureStats&) = default;

    CNWSCreatureStats(CNWSCreature*);
    ~CNWSCreatureStats();
    void AddExperience(uint32_t);
    void AddFeat(uint16_t);
    void AddKnownSpell(unsigned char, uint32_t);
    void AddSpellLikeAbilityToList(uint32_t, int32_t, unsigned char);
    void AdjustAlignment(unsigned char, int16_t, uint32_t);
    void AdjustSpellUsesPerDay();
    int32_t AutoMemorizeSpells(int32_t);
    void CalcLevelUpNumberFeats(unsigned char, unsigned char, unsigned char&, unsigned char&);
    char CalcStatModifier(unsigned char);
    int32_t CanChooseFeat(uint16_t, unsigned char, unsigned char, CExoArrayListTemplatedunsignedshort*);
    int32_t CanLevelUp();
    int32_t CheckSpellSuitability(int32_t, CNWSpell*, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, unsigned char&, int32_t);
    void ClearFeats();
    void ClearMemorizedSpellSlot(unsigned char, unsigned char, unsigned char);
    void ComputeFeatBonuses(CExoArrayListTemplatedunsignedshort*, int32_t, int32_t);
    unsigned char ComputeNumberKnownSpellsLeft(unsigned char, unsigned char);
    int32_t ConfirmDomainSpell(unsigned char, unsigned char, uint32_t);
    void DecrementFeatRemainingUses(uint16_t);
    void DecrementSpellsPerDayLeft(unsigned char, unsigned char);
    int32_t FeatAcquired(uint16_t, CExoArrayListTemplatedunsignedshort*, int32_t);
    int32_t FeatRequirementsMet(uint16_t, CExoArrayListTemplatedunsignedshort*);
    int32_t FeatRequirementsMetAfterLevelUp(uint16_t, CNWLevelStats*, unsigned char);
    void GetAbilityModsFromFeats(CExoArrayListTemplatedunsignedshort*, int32_t*, int32_t, int32_t);
    char GetACNaturalBase(int32_t);
    CExoString GetAlignmentString();
    int16_t GetArmorClassVersus(CNWSCreature*, int32_t);
    int32_t GetAttackModifierVersus(CNWSCreature*);
    unsigned char GetAttacksPerRound();
    int32_t GetBaseAttackBonus(int32_t);
    char GetBaseFortSavingThrow();
    char GetBaseReflexSavingThrow();
    char GetBaseWillSavingThrow();
    uint16_t GetBonusFeat(uint16_t);
    int32_t GetCanUseRelatedCategory(int32_t, int32_t);
    int32_t GetCanUseSkill(unsigned char);
    int32_t GetCanUseSkillAfterLevelUp(uint16_t, CNWLevelStats*);
    uint16_t GetCasterLevel(unsigned char);
    unsigned char GetCHAStat();
    unsigned char GetClass(unsigned char);
    CNWSCreatureStats_ClassInfo* GetClassInfo(unsigned char);
    unsigned char GetClassLevel(unsigned char, int32_t);
    unsigned char GetClassNegativeLevels(unsigned char);
    CExoString GetClassString(unsigned char);
    unsigned char GetCONStat();
    unsigned char GetCreatureDamageDice(unsigned char);
    unsigned char GetCreatureDamageDie(unsigned char);
    int32_t GetCreatureHasTalent(int32_t, int32_t, unsigned char);
    int32_t GetCreatureTalentRandom(int32_t, int32_t, int32_t&, int32_t&, unsigned char&, uint32_t&, int32_t&, unsigned char&, unsigned char&);
    int32_t GetCreatureTalentRandomFeat(int32_t, int32_t, int32_t&, int32_t&, unsigned char&);
    int32_t GetCreatureTalentRandomKnownSpell(int32_t, int32_t, int32_t&, int32_t&, unsigned char&, int32_t);
    int32_t GetCreatureTalentRandomMemorisedSpell(int32_t, int32_t, int32_t&, int32_t&, unsigned char&, int32_t, unsigned char&);
    int32_t GetCreatureTalentRandomSkill(int32_t, int32_t, int32_t&, int32_t&, unsigned char&);
    int32_t GetCreatureTalentRandomSpell(int32_t, int32_t, int32_t&, int32_t&, unsigned char&, unsigned char&);
    int32_t GetCreatureTalentRandomSpellFromItem(int32_t, int32_t, int32_t&, int32_t&, unsigned char&, uint32_t&, int32_t&);
    int32_t GetCreatureTalentRandomSpellLikeAbility(int32_t, int32_t, int32_t&, int32_t&, unsigned char&, unsigned char&);
    int32_t GetCriticalHitMultiplier(int32_t);
    int32_t GetCriticalHitRoll(int32_t);
    int32_t GetDamageBonus(CNWSCreature*, int32_t);
    int32_t GetDamageRoll(CNWSObject*, int32_t, int32_t, int32_t, int32_t, int32_t);
    char GetDEXMod(int32_t);
    unsigned char GetDEXStat();
    unsigned char GetDomain1(unsigned char);
    unsigned char GetDomain2(unsigned char);
    int32_t GetEffectImmunity(unsigned char, CNWSCreature*, int32_t);
    unsigned char GetEffectiveCRForPotentialLevel();
    int32_t GetEpicWeaponDevastatingCritical(CNWSItem*);
    int32_t GetEpicWeaponFocus(CNWSItem*);
    int32_t GetEpicWeaponOverwhelmingCritical(CNWSItem*);
    int32_t GetEpicWeaponSpecialization(CNWSItem*);
    uint32_t GetExpNeededForLevelUp();
    int32_t GetFavoredEnemyBonus(CNWSCreature*);
    uint16_t GetFeat(uint16_t);
    unsigned char GetFeatRemainingUses(uint16_t);
    unsigned char GetFeatSourceClass(uint16_t);
    unsigned char GetFeatTotalUses(uint16_t);
    char GetFortSavingThrow(int32_t);
    CExoString GetFullName();
    int32_t GetHasLostClassAbilities(unsigned char);
    int32_t GetHasSilencedSpell(uint32_t);
    int32_t GetHasStilledSpell(uint32_t);
    uint32_t GetHighestLevelKnown();
    uint16_t GetHighestLevelOfFeat(uint16_t);
    unsigned char GetHitDie(unsigned char, unsigned char);
    unsigned char GetINTStat();
    unsigned char GetIsClass(unsigned char);
    int32_t GetIsClassAvailable(unsigned char);
    int32_t GetIsDomainSpell(unsigned char, unsigned char, unsigned char);
    int32_t GetIsEpitomeOfAlignment();
    int32_t GetIsInKnownSpellList(unsigned char, uint32_t);
    int32_t GetIsInSpellLikeAbilityList(uint32_t);
    int32_t GetIsWeaponOfChoice(uint32_t);
    uint32_t GetKnownSpell(unsigned char, unsigned char, unsigned char);
    CResRef GetLargePortrait();
    unsigned char GetLevel(int32_t);
    CNWLevelStats* GetLevelStats(unsigned char);
    int32_t GetMeetsPrestigeClassRequirements(CNWClass*);
    int32_t GetMeleeAttackBonus(int32_t, int32_t, int32_t);
    int32_t GetMeleeDamageBonus(int32_t, unsigned char);
    uint32_t GetMemorizedSpellInSlot(unsigned char, unsigned char, unsigned char);
    unsigned char GetMemorizedSpellInSlotMetaType(unsigned char, unsigned char, unsigned char);
    unsigned char GetMemorizedSpellInSlotReady(unsigned char, unsigned char, unsigned char);
    unsigned char GetMemorizedSpellReadyCount(uint32_t);
    unsigned char GetMemorizedSpellReadyCount(unsigned char, uint32_t, unsigned char);
    unsigned char GetMemorizedSpellReadyCount(unsigned char, uint32_t, unsigned char*, unsigned char*);
    int32_t GetMetamagicPrerequisitesMet(unsigned char);
    uint16_t GetNumberKnownSpells(unsigned char, unsigned char);
    unsigned char GetNumberMemorizedSpellSlots(unsigned char, unsigned char);
    uint32_t GetNumberOfBonusSpells(unsigned char, unsigned char);
    int32_t GetNumLevelsOfClass(unsigned char);
    int32_t GetNumLevelsOfClass(unsigned char, int32_t);
    unsigned char GetPotentialLevel();
    char GetPrimaryMod(unsigned char);
    CExoString GetRaceString();
    int32_t GetRangedAttackBonus(int32_t, int32_t);
    int32_t GetRangedDamageBonus();
    char GetReflexSavingThrow(int32_t);
    unsigned char GetSchool(unsigned char);
    unsigned char GetSimpleAlignmentGoodEvil();
    unsigned char GetSimpleAlignmentLawChaos();
    char GetSkillRank(unsigned char, CNWSObject*, int32_t);
    CResRef GetSmallPortrait();
    unsigned char GetSpellFailure(unsigned char);
    unsigned char GetSpellGainWithBonus(unsigned char, unsigned char);
    unsigned char GetSpellGainWithBonusAfterLevelUp(unsigned char, unsigned char, CNWLevelStats*, unsigned char, int32_t);
    unsigned char GetSpellLikeAbilityCasterLevel(uint32_t);
    int32_t GetSpellMinAbilityMet(unsigned char, unsigned char);
    char GetSpellResistance();
    unsigned char GetSpellsOfLevelReady(unsigned char, unsigned char);
    unsigned char GetSpellsPerDayLeft(unsigned char, unsigned char);
    unsigned char GetSpellUsesLeft(uint32_t, unsigned char, unsigned char, unsigned char);
    void GetStatBonusesFromFeats(CExoArrayListTemplatedunsignedshort*, int32_t*, unsigned char);
    float GetStatById(int32_t);
    unsigned char GetSTRStat();
    CExoString* GetTag();
    char GetTotalACSkillMod();
    char GetTotalCHABonus();
    char GetTotalCONBonus();
    char GetTotalDEXBonus();
    char GetTotalINTBonus();
    int32_t GetTotalNegativeLevels();
    char GetTotalSTRBonus();
    char GetTotalWISBonus();
    unsigned char GetUnarmedDamageDice();
    unsigned char GetUnarmedDamageDie();
    int32_t GetUnarmedDamageRoll(CNWSObject*);
    int32_t GetUseMonkAttackTables(int32_t);
    int32_t GetWeaponFinesse(CNWSItem*);
    int32_t GetWeaponFocus(CNWSItem*);
    int32_t GetWeaponImprovedCritical(CNWSItem*);
    int32_t GetWeaponSpecialization(CNWSItem*);
    char GetWillSavingThrow(int32_t);
    unsigned char GetWISStat();
    int32_t HasFeat(uint16_t);
    void IncrementFeatRemainingUses(uint16_t);
    void IncrementSpellsPerDayLeft(unsigned char, unsigned char);
    void LevelDown(CNWLevelStats*);
    void LevelUp(CNWLevelStats*, unsigned char, unsigned char, unsigned char, int32_t);
    int32_t LevelUpAutomatic(unsigned char, int32_t, unsigned char);
    int32_t ModifyAlignment(int16_t, int16_t);
    void ModifyNumberBonusSpells(unsigned char, unsigned char, int32_t);
    void ReadSpellsFromGff(CResGFF*, CResStruct*, int32_t);
    uint32_t ReadStatsFromGff(CResGFF*, CResStruct*, CNWSCreatureAppearanceInfo*, int32_t, int32_t, int32_t);
    void ReadySpellLevel(unsigned char);
    void RemoveFeat(uint16_t);
    void RemoveKnownSpell(unsigned char, uint32_t);
    void ResetFeatRemainingUses();
    void ResetSpellLikeAbilities();
    void ResetSpellsPerDayLeft(unsigned char, unsigned char);
    int32_t ResolveSpecialAttackAttackBonus(CNWSCreature*);
    int32_t ResolveSpecialAttackDamageBonus(CNWSCreature*);
    void SaveClassInfo(CResGFF*, CResStruct*);
    void SaveStats(CResGFF*, CResStruct*);
    void SetArcaneSpellFailure(char);
    void SetCHABase(unsigned char);
    void SetClass(unsigned char, unsigned char);
    void SetClassLevel(unsigned char, unsigned char);
    void SetClassNegativeLevels(unsigned char, unsigned char);
    void SetCONBase(unsigned char, int32_t);
    void SetDEXBase(unsigned char);
    void SetDomain1(unsigned char, unsigned char);
    void SetDomain2(unsigned char, unsigned char);
    void SetExperience(uint32_t, int32_t);
    void SetFeatRemainingUses(uint16_t, unsigned char);
    void SetHasLostClassAbilities(unsigned char, int32_t);
    void SetINTBase(unsigned char);
    void SetMemorizedSpellInSlotReady(unsigned char, unsigned char, unsigned char, int32_t);
    int32_t SetMemorizedSpellSlot(unsigned char, unsigned char, uint32_t, unsigned char, unsigned char, int32_t);
    void SetMovementRate(int32_t);
    void SetNormalBonusFlags(uint16_t, int32_t&, int32_t&);
    void SetNumberMemorizedSpellSlots(unsigned char, unsigned char, unsigned char);
    void SetSchool(unsigned char, unsigned char);
    void SetSkillRank(unsigned char, char);
    void SetSpellFailure(unsigned char, unsigned char);
    int32_t SetSpellLikeAbilityReady(uint32_t, int32_t, unsigned char);
    void SetSpellResistance(char);
    void SetSpellResistancePenalty(char);
    void SetStatById(int32_t, float);
    void SetSTRBase(unsigned char);
    void SetTag(const CExoString&);
    void SetWISBase(unsigned char);
    int32_t UnReadySpell(uint32_t, unsigned char, unsigned char, unsigned char);
    void UpdateCombatInformation();
    void UpdateLastStatsObject(uint64_t, CNWCreatureStatsUpdate*);
    void UpdateNumberMemorizedSpellSlots();
    uint32_t ValidateLevelUp(CNWLevelStats*, unsigned char, unsigned char, unsigned char);
};

void CNWSCreatureStats__CNWSCreatureStatsCtor__0(CNWSCreatureStats* thisPtr, CNWSCreature*);
void CNWSCreatureStats__CNWSCreatureStatsDtor__0(CNWSCreatureStats* thisPtr);
void CNWSCreatureStats__AddExperience(CNWSCreatureStats* thisPtr, uint32_t);
void CNWSCreatureStats__AddFeat(CNWSCreatureStats* thisPtr, uint16_t);
void CNWSCreatureStats__AddKnownSpell(CNWSCreatureStats* thisPtr, unsigned char, uint32_t);
void CNWSCreatureStats__AddSpellLikeAbilityToList(CNWSCreatureStats* thisPtr, uint32_t, int32_t, unsigned char);
void CNWSCreatureStats__AdjustAlignment(CNWSCreatureStats* thisPtr, unsigned char, int16_t, uint32_t);
void CNWSCreatureStats__AdjustSpellUsesPerDay(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__AutoMemorizeSpells(CNWSCreatureStats* thisPtr, int32_t);
void CNWSCreatureStats__CalcLevelUpNumberFeats(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char&, unsigned char&);
char CNWSCreatureStats__CalcStatModifier(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__CanChooseFeat(CNWSCreatureStats* thisPtr, uint16_t, unsigned char, unsigned char, CExoArrayListTemplatedunsignedshort*);
int32_t CNWSCreatureStats__CanLevelUp(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__CheckSpellSuitability(CNWSCreatureStats* thisPtr, int32_t, CNWSpell*, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, unsigned char&, int32_t);
void CNWSCreatureStats__ClearFeats(CNWSCreatureStats* thisPtr);
void CNWSCreatureStats__ClearMemorizedSpellSlot(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
void CNWSCreatureStats__ComputeFeatBonuses(CNWSCreatureStats* thisPtr, CExoArrayListTemplatedunsignedshort*, int32_t, int32_t);
unsigned char CNWSCreatureStats__ComputeNumberKnownSpellsLeft(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
int32_t CNWSCreatureStats__ConfirmDomainSpell(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, uint32_t);
void CNWSCreatureStats__DecrementFeatRemainingUses(CNWSCreatureStats* thisPtr, uint16_t);
void CNWSCreatureStats__DecrementSpellsPerDayLeft(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
int32_t CNWSCreatureStats__FeatAcquired(CNWSCreatureStats* thisPtr, uint16_t, CExoArrayListTemplatedunsignedshort*, int32_t);
int32_t CNWSCreatureStats__FeatRequirementsMet(CNWSCreatureStats* thisPtr, uint16_t, CExoArrayListTemplatedunsignedshort*);
int32_t CNWSCreatureStats__FeatRequirementsMetAfterLevelUp(CNWSCreatureStats* thisPtr, uint16_t, CNWLevelStats*, unsigned char);
void CNWSCreatureStats__GetAbilityModsFromFeats(CNWSCreatureStats* thisPtr, CExoArrayListTemplatedunsignedshort*, int32_t*, int32_t, int32_t);
char CNWSCreatureStats__GetACNaturalBase(CNWSCreatureStats* thisPtr, int32_t);
CExoString CNWSCreatureStats__GetAlignmentString(CNWSCreatureStats* thisPtr);
int16_t CNWSCreatureStats__GetArmorClassVersus(CNWSCreatureStats* thisPtr, CNWSCreature*, int32_t);
int32_t CNWSCreatureStats__GetAttackModifierVersus(CNWSCreatureStats* thisPtr, CNWSCreature*);
unsigned char CNWSCreatureStats__GetAttacksPerRound(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetBaseAttackBonus(CNWSCreatureStats* thisPtr, int32_t);
char CNWSCreatureStats__GetBaseFortSavingThrow(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetBaseReflexSavingThrow(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetBaseWillSavingThrow(CNWSCreatureStats* thisPtr);
uint16_t CNWSCreatureStats__GetBonusFeat(CNWSCreatureStats* thisPtr, uint16_t);
int32_t CNWSCreatureStats__GetCanUseRelatedCategory(CNWSCreatureStats* thisPtr, int32_t, int32_t);
int32_t CNWSCreatureStats__GetCanUseSkill(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetCanUseSkillAfterLevelUp(CNWSCreatureStats* thisPtr, uint16_t, CNWLevelStats*);
uint16_t CNWSCreatureStats__GetCasterLevel(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetCHAStat(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetClass(CNWSCreatureStats* thisPtr, unsigned char);
CNWSCreatureStats_ClassInfo* CNWSCreatureStats__GetClassInfo(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetClassLevel(CNWSCreatureStats* thisPtr, unsigned char, int32_t);
unsigned char CNWSCreatureStats__GetClassNegativeLevels(CNWSCreatureStats* thisPtr, unsigned char);
CExoString CNWSCreatureStats__GetClassString(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetCONStat(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetCreatureDamageDice(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetCreatureDamageDie(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetCreatureHasTalent(CNWSCreatureStats* thisPtr, int32_t, int32_t, unsigned char);
int32_t CNWSCreatureStats__GetCreatureTalentRandom(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&, uint32_t&, int32_t&, unsigned char&, unsigned char&);
int32_t CNWSCreatureStats__GetCreatureTalentRandomFeat(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&);
int32_t CNWSCreatureStats__GetCreatureTalentRandomKnownSpell(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&, int32_t);
int32_t CNWSCreatureStats__GetCreatureTalentRandomMemorisedSpell(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&, int32_t, unsigned char&);
int32_t CNWSCreatureStats__GetCreatureTalentRandomSkill(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&);
int32_t CNWSCreatureStats__GetCreatureTalentRandomSpell(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&, unsigned char&);
int32_t CNWSCreatureStats__GetCreatureTalentRandomSpellFromItem(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&, uint32_t&, int32_t&);
int32_t CNWSCreatureStats__GetCreatureTalentRandomSpellLikeAbility(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t&, int32_t&, unsigned char&, unsigned char&);
int32_t CNWSCreatureStats__GetCriticalHitMultiplier(CNWSCreatureStats* thisPtr, int32_t);
int32_t CNWSCreatureStats__GetCriticalHitRoll(CNWSCreatureStats* thisPtr, int32_t);
int32_t CNWSCreatureStats__GetDamageBonus(CNWSCreatureStats* thisPtr, CNWSCreature*, int32_t);
int32_t CNWSCreatureStats__GetDamageRoll(CNWSCreatureStats* thisPtr, CNWSObject*, int32_t, int32_t, int32_t, int32_t, int32_t);
char CNWSCreatureStats__GetDEXMod(CNWSCreatureStats* thisPtr, int32_t);
unsigned char CNWSCreatureStats__GetDEXStat(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetDomain1(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetDomain2(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetEffectImmunity(CNWSCreatureStats* thisPtr, unsigned char, CNWSCreature*, int32_t);
unsigned char CNWSCreatureStats__GetEffectiveCRForPotentialLevel(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetEpicWeaponDevastatingCritical(CNWSCreatureStats* thisPtr, CNWSItem*);
int32_t CNWSCreatureStats__GetEpicWeaponFocus(CNWSCreatureStats* thisPtr, CNWSItem*);
int32_t CNWSCreatureStats__GetEpicWeaponOverwhelmingCritical(CNWSCreatureStats* thisPtr, CNWSItem*);
int32_t CNWSCreatureStats__GetEpicWeaponSpecialization(CNWSCreatureStats* thisPtr, CNWSItem*);
uint32_t CNWSCreatureStats__GetExpNeededForLevelUp(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetFavoredEnemyBonus(CNWSCreatureStats* thisPtr, CNWSCreature*);
uint16_t CNWSCreatureStats__GetFeat(CNWSCreatureStats* thisPtr, uint16_t);
unsigned char CNWSCreatureStats__GetFeatRemainingUses(CNWSCreatureStats* thisPtr, uint16_t);
unsigned char CNWSCreatureStats__GetFeatSourceClass(CNWSCreatureStats* thisPtr, uint16_t);
unsigned char CNWSCreatureStats__GetFeatTotalUses(CNWSCreatureStats* thisPtr, uint16_t);
char CNWSCreatureStats__GetFortSavingThrow(CNWSCreatureStats* thisPtr, int32_t);
CExoString CNWSCreatureStats__GetFullName(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetHasLostClassAbilities(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetHasSilencedSpell(CNWSCreatureStats* thisPtr, uint32_t);
int32_t CNWSCreatureStats__GetHasStilledSpell(CNWSCreatureStats* thisPtr, uint32_t);
uint32_t CNWSCreatureStats__GetHighestLevelKnown(CNWSCreatureStats* thisPtr);
uint16_t CNWSCreatureStats__GetHighestLevelOfFeat(CNWSCreatureStats* thisPtr, uint16_t);
unsigned char CNWSCreatureStats__GetHitDie(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetINTStat(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetIsClass(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetIsClassAvailable(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetIsDomainSpell(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
int32_t CNWSCreatureStats__GetIsEpitomeOfAlignment(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetIsInKnownSpellList(CNWSCreatureStats* thisPtr, unsigned char, uint32_t);
int32_t CNWSCreatureStats__GetIsInSpellLikeAbilityList(CNWSCreatureStats* thisPtr, uint32_t);
int32_t CNWSCreatureStats__GetIsWeaponOfChoice(CNWSCreatureStats* thisPtr, uint32_t);
uint32_t CNWSCreatureStats__GetKnownSpell(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
CResRef CNWSCreatureStats__GetLargePortrait(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetLevel(CNWSCreatureStats* thisPtr, int32_t);
CNWLevelStats* CNWSCreatureStats__GetLevelStats(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetMeetsPrestigeClassRequirements(CNWSCreatureStats* thisPtr, CNWClass*);
int32_t CNWSCreatureStats__GetMeleeAttackBonus(CNWSCreatureStats* thisPtr, int32_t, int32_t, int32_t);
int32_t CNWSCreatureStats__GetMeleeDamageBonus(CNWSCreatureStats* thisPtr, int32_t, unsigned char);
uint32_t CNWSCreatureStats__GetMemorizedSpellInSlot(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetMemorizedSpellInSlotMetaType(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetMemorizedSpellInSlotReady(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetMemorizedSpellReadyCount__0(CNWSCreatureStats* thisPtr, uint32_t);
unsigned char CNWSCreatureStats__GetMemorizedSpellReadyCount__1(CNWSCreatureStats* thisPtr, unsigned char, uint32_t, unsigned char);
unsigned char CNWSCreatureStats__GetMemorizedSpellReadyCount__2(CNWSCreatureStats* thisPtr, unsigned char, uint32_t, unsigned char*, unsigned char*);
int32_t CNWSCreatureStats__GetMetamagicPrerequisitesMet(CNWSCreatureStats* thisPtr, unsigned char);
uint16_t CNWSCreatureStats__GetNumberKnownSpells(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetNumberMemorizedSpellSlots(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
uint32_t CNWSCreatureStats__GetNumberOfBonusSpells(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
int32_t CNWSCreatureStats__GetNumLevelsOfClass__0(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__GetNumLevelsOfClass__1(CNWSCreatureStats* thisPtr, unsigned char, int32_t);
unsigned char CNWSCreatureStats__GetPotentialLevel(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetPrimaryMod(CNWSCreatureStats* thisPtr, unsigned char);
CExoString CNWSCreatureStats__GetRaceString(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetRangedAttackBonus(CNWSCreatureStats* thisPtr, int32_t, int32_t);
int32_t CNWSCreatureStats__GetRangedDamageBonus(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetReflexSavingThrow(CNWSCreatureStats* thisPtr, int32_t);
unsigned char CNWSCreatureStats__GetSchool(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetSimpleAlignmentGoodEvil(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetSimpleAlignmentLawChaos(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetSkillRank(CNWSCreatureStats* thisPtr, unsigned char, CNWSObject*, int32_t);
CResRef CNWSCreatureStats__GetSmallPortrait(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetSpellFailure(CNWSCreatureStats* thisPtr, unsigned char);
unsigned char CNWSCreatureStats__GetSpellGainWithBonus(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetSpellGainWithBonusAfterLevelUp(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, CNWLevelStats*, unsigned char, int32_t);
unsigned char CNWSCreatureStats__GetSpellLikeAbilityCasterLevel(CNWSCreatureStats* thisPtr, uint32_t);
int32_t CNWSCreatureStats__GetSpellMinAbilityMet(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
char CNWSCreatureStats__GetSpellResistance(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetSpellsOfLevelReady(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetSpellsPerDayLeft(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
unsigned char CNWSCreatureStats__GetSpellUsesLeft(CNWSCreatureStats* thisPtr, uint32_t, unsigned char, unsigned char, unsigned char);
void CNWSCreatureStats__GetStatBonusesFromFeats(CNWSCreatureStats* thisPtr, CExoArrayListTemplatedunsignedshort*, int32_t*, unsigned char);
float CNWSCreatureStats__GetStatById(CNWSCreatureStats* thisPtr, int32_t);
unsigned char CNWSCreatureStats__GetSTRStat(CNWSCreatureStats* thisPtr);
CExoString* CNWSCreatureStats__GetTag(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalACSkillMod(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalCHABonus(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalCONBonus(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalDEXBonus(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalINTBonus(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetTotalNegativeLevels(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalSTRBonus(CNWSCreatureStats* thisPtr);
char CNWSCreatureStats__GetTotalWISBonus(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetUnarmedDamageDice(CNWSCreatureStats* thisPtr);
unsigned char CNWSCreatureStats__GetUnarmedDamageDie(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__GetUnarmedDamageRoll(CNWSCreatureStats* thisPtr, CNWSObject*);
int32_t CNWSCreatureStats__GetUseMonkAttackTables(CNWSCreatureStats* thisPtr, int32_t);
int32_t CNWSCreatureStats__GetWeaponFinesse(CNWSCreatureStats* thisPtr, CNWSItem*);
int32_t CNWSCreatureStats__GetWeaponFocus(CNWSCreatureStats* thisPtr, CNWSItem*);
int32_t CNWSCreatureStats__GetWeaponImprovedCritical(CNWSCreatureStats* thisPtr, CNWSItem*);
int32_t CNWSCreatureStats__GetWeaponSpecialization(CNWSCreatureStats* thisPtr, CNWSItem*);
char CNWSCreatureStats__GetWillSavingThrow(CNWSCreatureStats* thisPtr, int32_t);
unsigned char CNWSCreatureStats__GetWISStat(CNWSCreatureStats* thisPtr);
int32_t CNWSCreatureStats__HasFeat(CNWSCreatureStats* thisPtr, uint16_t);
void CNWSCreatureStats__IncrementFeatRemainingUses(CNWSCreatureStats* thisPtr, uint16_t);
void CNWSCreatureStats__IncrementSpellsPerDayLeft(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__LevelDown(CNWSCreatureStats* thisPtr, CNWLevelStats*);
void CNWSCreatureStats__LevelUp(CNWSCreatureStats* thisPtr, CNWLevelStats*, unsigned char, unsigned char, unsigned char, int32_t);
int32_t CNWSCreatureStats__LevelUpAutomatic(CNWSCreatureStats* thisPtr, unsigned char, int32_t, unsigned char);
int32_t CNWSCreatureStats__ModifyAlignment(CNWSCreatureStats* thisPtr, int16_t, int16_t);
void CNWSCreatureStats__ModifyNumberBonusSpells(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, int32_t);
void CNWSCreatureStats__ReadSpellsFromGff(CNWSCreatureStats* thisPtr, CResGFF*, CResStruct*, int32_t);
uint32_t CNWSCreatureStats__ReadStatsFromGff(CNWSCreatureStats* thisPtr, CResGFF*, CResStruct*, CNWSCreatureAppearanceInfo*, int32_t, int32_t, int32_t);
void CNWSCreatureStats__ReadySpellLevel(CNWSCreatureStats* thisPtr, unsigned char);
void CNWSCreatureStats__RemoveFeat(CNWSCreatureStats* thisPtr, uint16_t);
void CNWSCreatureStats__RemoveKnownSpell(CNWSCreatureStats* thisPtr, unsigned char, uint32_t);
void CNWSCreatureStats__ResetFeatRemainingUses(CNWSCreatureStats* thisPtr);
void CNWSCreatureStats__ResetSpellLikeAbilities(CNWSCreatureStats* thisPtr);
void CNWSCreatureStats__ResetSpellsPerDayLeft(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
int32_t CNWSCreatureStats__ResolveSpecialAttackAttackBonus(CNWSCreatureStats* thisPtr, CNWSCreature*);
int32_t CNWSCreatureStats__ResolveSpecialAttackDamageBonus(CNWSCreatureStats* thisPtr, CNWSCreature*);
void CNWSCreatureStats__SaveClassInfo(CNWSCreatureStats* thisPtr, CResGFF*, CResStruct*);
void CNWSCreatureStats__SaveStats(CNWSCreatureStats* thisPtr, CResGFF*, CResStruct*);
void CNWSCreatureStats__SetArcaneSpellFailure(CNWSCreatureStats* thisPtr, char);
void CNWSCreatureStats__SetCHABase(CNWSCreatureStats* thisPtr, unsigned char);
void CNWSCreatureStats__SetClass(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__SetClassLevel(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__SetClassNegativeLevels(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__SetCONBase(CNWSCreatureStats* thisPtr, unsigned char, int32_t);
void CNWSCreatureStats__SetDEXBase(CNWSCreatureStats* thisPtr, unsigned char);
void CNWSCreatureStats__SetDomain1(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__SetDomain2(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__SetExperience(CNWSCreatureStats* thisPtr, uint32_t, int32_t);
void CNWSCreatureStats__SetFeatRemainingUses(CNWSCreatureStats* thisPtr, uint16_t, unsigned char);
void CNWSCreatureStats__SetHasLostClassAbilities(CNWSCreatureStats* thisPtr, unsigned char, int32_t);
void CNWSCreatureStats__SetINTBase(CNWSCreatureStats* thisPtr, unsigned char);
void CNWSCreatureStats__SetMemorizedSpellInSlotReady(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char, int32_t);
int32_t CNWSCreatureStats__SetMemorizedSpellSlot(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, uint32_t, unsigned char, unsigned char, int32_t);
void CNWSCreatureStats__SetMovementRate(CNWSCreatureStats* thisPtr, int32_t);
void CNWSCreatureStats__SetNormalBonusFlags(CNWSCreatureStats* thisPtr, uint16_t, int32_t&, int32_t&);
void CNWSCreatureStats__SetNumberMemorizedSpellSlots(CNWSCreatureStats* thisPtr, unsigned char, unsigned char, unsigned char);
void CNWSCreatureStats__SetSchool(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
void CNWSCreatureStats__SetSkillRank(CNWSCreatureStats* thisPtr, unsigned char, char);
void CNWSCreatureStats__SetSpellFailure(CNWSCreatureStats* thisPtr, unsigned char, unsigned char);
int32_t CNWSCreatureStats__SetSpellLikeAbilityReady(CNWSCreatureStats* thisPtr, uint32_t, int32_t, unsigned char);
void CNWSCreatureStats__SetSpellResistance(CNWSCreatureStats* thisPtr, char);
void CNWSCreatureStats__SetSpellResistancePenalty(CNWSCreatureStats* thisPtr, char);
void CNWSCreatureStats__SetStatById(CNWSCreatureStats* thisPtr, int32_t, float);
void CNWSCreatureStats__SetSTRBase(CNWSCreatureStats* thisPtr, unsigned char);
void CNWSCreatureStats__SetTag(CNWSCreatureStats* thisPtr, const CExoString&);
void CNWSCreatureStats__SetWISBase(CNWSCreatureStats* thisPtr, unsigned char);
int32_t CNWSCreatureStats__UnReadySpell(CNWSCreatureStats* thisPtr, uint32_t, unsigned char, unsigned char, unsigned char);
void CNWSCreatureStats__UpdateCombatInformation(CNWSCreatureStats* thisPtr);
void CNWSCreatureStats__UpdateLastStatsObject(CNWSCreatureStats* thisPtr, uint64_t, CNWCreatureStatsUpdate*);
void CNWSCreatureStats__UpdateNumberMemorizedSpellSlots(CNWSCreatureStats* thisPtr);
uint32_t CNWSCreatureStats__ValidateLevelUp(CNWSCreatureStats* thisPtr, CNWLevelStats*, unsigned char, unsigned char, unsigned char);

}

}
