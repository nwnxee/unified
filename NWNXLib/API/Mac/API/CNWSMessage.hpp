#pragma once

#include <cstdint>

#include "CExoLocString.hpp"
#include "CExoString.hpp"
#include "CNWMessage.hpp"
#include "CResRef.hpp"
#include "Vector.hpp"

namespace NWNXLib {

namespace API {

// Forward class declarations (defined in the source file)
struct CExoArrayListTemplatedCEffectIconObjectPtr;
struct CExoArrayListTemplatedCLoopingVisualEffectPtr;
struct CExoArrayListTemplatedunsignedlong;
struct CExoLinkedListNode;
struct CGameObject;
struct CGameObjectArray;
struct CItemRepository;
struct CLastUpdateObject;
struct CLastUpdatePartyObject;
struct CNWCCMessageData;
struct CNWSArea;
struct CNWSAreaOfEffectObject;
struct CNWSCombatAttackData;
struct CNWSCreature;
struct CNWSDoor;
struct CNWSItem;
struct CNWSObject;
struct CNWSPlaceable;
struct CNWSPlayer;
struct CNWSPlayerInventoryGUI;
struct CNWSPlayerLUOInventory;
struct CNWSPlayerLUOSortedObjectList;
struct CNWSPlayerLastUpdateObject;
struct CNWSStore;
struct CNWSTrigger;

struct CNWSMessage
    : CNWMessage
{

    // The below are auto generated stubs.
    CNWSMessage(const CNWSMessage&) = default;
    CNWSMessage& operator=(const CNWSMessage&) = default;

    CNWSMessage();
    ~CNWSMessage();
    void AddActiveItemPropertiesToMessage(CNWSItem*, CNWSCreature*);
    void AddAreaOfEffectObjectToMessage(CNWSAreaOfEffectObject*);
    void AddDoorAppearanceToMessage(CNWSDoor*);
    void AddItemAppearanceToMessage(CNWSItem*);
    void AddPlaceableAppearanceToMessage(CNWSPlaceable*);
    void AddTriggerGeometryToMessage(CNWSTrigger*);
    void AssignCreatureLists(CExoArrayListTemplatedunsignedlong*, CExoArrayListTemplatedunsignedlong*);
    void AssignVisualEffectLists(CExoArrayListTemplatedCLoopingVisualEffectPtr*, CExoArrayListTemplatedCLoopingVisualEffectPtr*);
    int32_t CompareCreatureLists(CExoArrayListTemplatedunsignedlong*, CExoArrayListTemplatedunsignedlong*);
    int32_t CompareVisualEffectLists(CExoArrayListTemplatedCLoopingVisualEffectPtr*, CExoArrayListTemplatedCLoopingVisualEffectPtr*);
    uint32_t ComputeAppearanceUpdateRequired(CNWSObject*, CLastUpdateObject*);
    int32_t ComputeGameObjectUpdateForCategory(uint32_t, uint32_t, CNWSPlayer*, CNWSObject*, CGameObjectArray*, CNWSPlayerLUOSortedObjectList*, int32_t);
    void ComputeGameObjectUpdateForObject(CNWSPlayer*, CNWSObject*, CGameObjectArray*, uint32_t);
    void ComputeGameObjectUpdateForYourself(CNWSPlayer*, CNWSObject*, CGameObjectArray*, uint32_t);
    void ComputeGameObjectUpdateForYourselfToo(CNWSPlayer*, CNWSObject*, CGameObjectArray*, uint32_t);
    int32_t ComputeInventoryUpdateRequired(CNWSPlayer*, uint32_t, CNWSPlayerInventoryGUI*);
    int32_t ComputeLastUpdate_ActionQueue(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    uint16_t ComputeLastUpdate_AssociateState(CNWSCreature*);
    int32_t ComputeLastUpdate_AutoMap(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    int32_t ComputeLastUpdate_CompareSpellLikeAbility(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    int32_t ComputeLastUpdate_GuiEffectIcons(CNWSCreature*, CExoArrayListTemplatedCEffectIconObjectPtr*, int32_t);
    int32_t ComputeLastUpdate_GuiFeats(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    int32_t ComputeLastUpdate_GuiKnownSpells(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    int32_t ComputeLastUpdate_GuiKnownSpellUses(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    int32_t ComputeLastUpdate_GuiMemorizedSpells(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    int32_t ComputeLastUpdate_GuiNumberMemorizedSpells(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    uint32_t ComputeLastUpdate_GuiSkills(CNWSCreature*);
    uint32_t ComputeLastUpdate_PlayerState(CNWSCreature*);
    void ComputeLastUpdate_StoreUpdateSpellLikeAbility(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    void ComputeLastUpdate_WriteSpellLikeAbility(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    uint32_t ComputeNumAutoMapUpdatesRequired(CNWSCreature*, CNWSPlayerLastUpdateObject*, uint32_t*);
    int32_t ComputeQuickbarItemUseCountUpdateRequired(CNWSObject*, CLastUpdateObject*);
    int32_t ComputeRepositoryUpdateRequired(CNWSPlayer*, CExoLinkedListNode*, CExoLinkedListNode*);
    uint32_t ComputeUpdateRequired(CNWSPlayer*, CNWSObject*, CLastUpdateObject*, int32_t);
    int32_t ComputeVisibilityLists(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    CLastUpdateObject* CreateNewLastUpdateObject(CNWSPlayer*, CNWSObject*, uint32_t*, uint32_t*);
    void DeleteLastUpdateObjectsForObject(CNWSPlayer*, uint32_t);
    void DeleteLastUpdateObjectsInOtherAreas(CNWSPlayer*);
    static int32_t GetLocStringServer(uint32_t, CExoLocString, CExoLocString, CExoString&, float&, unsigned char);
    int32_t HandlePlayerToServerAreaMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerBarter(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerBarter_AcceptTrade(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_AddItem(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_CloseBarter(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_LockList(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_MoveItem(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_RemoveItem(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_StartBarter(CNWSPlayer*);
    int32_t HandlePlayerToServerBarter_Window(CNWSPlayer*);
    int32_t HandlePlayerToServerCharacterDownload(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerCharacterSheetMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerCharListMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerChatMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerCheatMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerCutscene(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerDialogMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerDungeonMasterMessage(CNWSPlayer*, unsigned char, int32_t);
    int32_t HandlePlayerToServerGameObjectUpdate(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerGoldMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerGroupInputMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerGroupInputWalkToWaypoint(CNWSPlayer*, CNWSCreature*, uint32_t, float, float, float, unsigned char, int32_t, int32_t, uint32_t);
    int32_t HandlePlayerToServerGuiContainerMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerGuiInventoryMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerGuiQuickbar(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerGuiQuickbar_SetButton(CNWSPlayer*, unsigned char, unsigned char);
    int32_t HandlePlayerToServerInputAbortDriveControl(CNWSPlayer*);
    int32_t HandlePlayerToServerInputCancelGuiTimingEvent(CNWSPlayer*);
    int32_t HandlePlayerToServerInputDriveControl(CNWSPlayer*);
    int32_t HandlePlayerToServerInputMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerInputWalkToWaypoint(CNWSPlayer*);
    int32_t HandlePlayerToServerInventoryMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerJournalMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerLevelUpMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerLoginMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerMapPinChangePin(CNWSPlayer*);
    int32_t HandlePlayerToServerMapPinDestroyMapPin(CNWSPlayer*);
    int32_t HandlePlayerToServerMapPinMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerMapPinSetMapPinAt(CNWSPlayer*);
    int32_t HandlePlayerToServerMessage(uint32_t, unsigned char*, uint32_t);
    int32_t HandlePlayerToServerModuleMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerParty(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerPlayerDeath(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerPlayerList(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerPlayModuleCharacterList(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerPlayModuleCharacterList_Start(CNWSPlayer*);
    int32_t HandlePlayerToServerPlayModuleCharacterList_Stop(CNWSPlayer*);
    int32_t HandlePlayerToServerPortal(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerPVPListOperations(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerQuickChatMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerServerChatMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerServerStatusMessage(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerShutDownServer(CNWSPlayer*, unsigned char);
    int32_t HandlePlayerToServerStoreMessage(CNWSPlayer*, unsigned char);
    int32_t HandleServerAdminToServerMessage(uint32_t, unsigned char*, uint32_t);
    int32_t HasValidString(CExoLocString&, unsigned char);
    int32_t ParseGetBool(unsigned char*, uint32_t, int32_t&);
    int32_t ParseGetString(unsigned char*, uint32_t, CExoString&, uint32_t);
    int32_t ParseToken(const char*, unsigned char**, uint32_t&, int32_t);
    uint32_t ReadOBJECTIDServer();
    uint32_t SelectCategoryForGameObject(CGameObject*, CNWSObject*);
    int32_t SendPlayerToServerGuiInventory_Status(CNWSPlayer*, int32_t, uint32_t);
    int32_t SendServerPlayerItemUpdate_DestroyItem(CNWSPlayer*, uint32_t);
    int32_t SendServerToAllPlayersCreatureUpdate_StripEquippedItems(uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerActivatePortal(uint32_t, CExoString, CExoString, CExoString, int32_t);
    int32_t SendServerToPlayerAIActionPlaySound(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerAmbientBattleMusicChange(uint32_t, int32_t);
    int32_t SendServerToPlayerAmbientBattleMusicPlay(uint32_t, int32_t);
    int32_t SendServerToPlayerAmbientMusicChangeTrack(uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerAmbientMusicPlay(uint32_t, int32_t);
    int32_t SendServerToPlayerAmbientMusicSetDelay(uint32_t, int32_t);
    int32_t SendServerToPlayerAmbientSoundLoopChange(uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerAmbientSoundLoopPlay(uint32_t, int32_t);
    int32_t SendServerToPlayerAmbientSoundVolumeChange(uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerArea_ChangeDayNight(CNWSPlayer*, int32_t, float);
    int32_t SendServerToPlayerArea_ClientArea(CNWSPlayer*, CNWSArea*, float, float, float, const Vector&, int32_t);
    int32_t SendServerToPlayerArea_RecomputeStaticLighting(uint32_t);
    int32_t SendServerToPlayerArea_SetName(CNWSPlayer*, uint32_t, CExoString);
    int32_t SendServerToPlayerArea_VisualEffect(CNWSPlayer*, uint16_t, Vector);
    int32_t SendServerToPlayerArea_Weather(CNWSPlayer*, unsigned char, int32_t);
    int32_t SendServerToPlayerBarterAcceptTrade(uint32_t, uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerBarterCloseBarter(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerBarterLockList(uint32_t, uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerBarterReject(uint32_t, unsigned char, unsigned char, uint32_t);
    int32_t SendServerToPlayerBarterStartBarter(uint32_t, uint32_t, uint32_t, uint32_t);
    int32_t SendServerToPlayerCamera_ChangeLocation(CNWSPlayer*, int32_t, float, float, float, int32_t);
    int32_t SendServerToPlayerCamera_LockDistance(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerCamera_LockPitch(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerCamera_LockYaw(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerCamera_Restore(CNWSPlayer*);
    int32_t SendServerToPlayerCamera_SetHeight(CNWSPlayer*, float);
    int32_t SendServerToPlayerCamera_SetMode(CNWSPlayer*, unsigned char);
    int32_t SendServerToPlayerCamera_Store(CNWSPlayer*);
    int32_t SendServerToPlayerCCMessage(uint32_t, unsigned char, CNWCCMessageData*, CNWSCombatAttackData*);
    int32_t SendServerToPlayerCharacterDownloadFail(CNWSPlayer*);
    int32_t SendServerToPlayerCharacterDownloadReply(CNWSPlayer*);
    int32_t SendServerToPlayerCharList(CNWSPlayer*);
    int32_t SendServerToPlayerChat_DM_Silent_Shout(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_DM_Talk(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_DM_Whisper(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_Party(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_ServerTell(uint32_t, CExoString);
    int32_t SendServerToPlayerChat_Shout(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_Silent_Shout(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_StrRef(uint32_t, uint32_t, unsigned char, uint32_t);
    int32_t SendServerToPlayerChat_Talk(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_Tell(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChat_Whisper(uint32_t, uint32_t, CExoString);
    int32_t SendServerToPlayerChatMessage(unsigned char, uint32_t, CExoString, uint32_t, const CExoString&);
    int32_t SendServerToPlayerChatMultiLang_Helper(uint32_t, unsigned char, uint32_t, CExoLocString, uint32_t, unsigned char, int32_t, const CResRef&, int32_t, uint32_t);
    int32_t SendServerToPlayerChatMultiLangMessage(unsigned char, uint32_t, CExoLocString, uint32_t, unsigned char, uint32_t*, uint32_t, int32_t, const CResRef&, int32_t, uint32_t);
    int32_t SendServerToPlayerChatStrRefMessage(unsigned char, uint32_t, uint32_t);
    int32_t SendServerToPlayerCheatDebugMode(int32_t);
    int32_t SendServerToPlayerCheatNasty(uint32_t, uint32_t);
    int32_t SendServerToPlayerCheatPonyRide(uint32_t, uint32_t);
    int32_t SendServerToPlayerCheatRainOfCows(uint32_t, uint32_t);
    int32_t SendServerToPlayerCloseStoreInventory(CNWSPlayer*);
    int32_t SendServerToPlayerCombatRoundStarted(CNWSPlayer*);
    int32_t SendServerToPlayerCutscene_BlackScreen(CNWSPlayer*);
    int32_t SendServerToPlayerCutscene_FadeFromBlack(CNWSPlayer*, float);
    int32_t SendServerToPlayerCutscene_FadeToBlack(CNWSPlayer*, float);
    int32_t SendServerToPlayerCutscene_HideGui(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerCutscene_Status(CNWSPlayer*, int32_t, int32_t);
    int32_t SendServerToPlayerCutscene_StopFade(CNWSPlayer*);
    int32_t SendServerToPlayerDebugInfo_Area(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerDebugInfo_Creature(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerDebugInfo_Door(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerDebugInfo_Item(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerDebugInfo_Placeable(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerDebugInfo_Trigger(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerDestroyDeathGUI(uint32_t);
    int32_t SendServerToPlayerDialogClose(uint32_t);
    int32_t SendServerToPlayerDialogEntry(uint32_t, uint32_t, uint32_t, CExoLocString, uint32_t, unsigned char);
    int32_t SendServerToPlayerDialogReplies(uint32_t, CExoLocString*, uint32_t*, uint32_t, uint32_t, uint32_t, unsigned char, int32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerDialogReplyChosen(uint32_t, uint32_t, uint32_t, CExoLocString, uint32_t, unsigned char, int32_t);
    int32_t SendServerToPlayerDungeonMasterAreaList(uint32_t);
    int32_t SendServerToPlayerDungeonMasterAreaList(CNWSPlayer*);
    int32_t SendServerToPlayerDungeonMasterCreatorLists(CNWSPlayer*);
    int32_t SendServerToPlayerDungeonMasterObjectList(CNWSPlayer*, uint32_t, int32_t);
    int32_t SendServerToPlayerDungeonMastersDifficultyChange(int32_t);
    int32_t SendServerToPlayerDungeonMasterSearchByIdResult(CNWSPlayer*, uint32_t, int32_t, uint32_t);
    int32_t SendServerToPlayerDungeonMasterSearchByTagResult(CNWSPlayer*, const CExoString&, int32_t, uint32_t);
    int32_t SendServerToPlayerDungeonMasterUpdatePartyList(uint32_t);
    int32_t SendServerToPlayerDungeonMasterUpdatePartyList(CNWSPlayer*);
    int32_t SendServerToPlayerExamineGui_CreatureData(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerExamineGui_DoorData(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerExamineGui_ItemData(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerExamineGui_PlaceableData(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerExamineGui_TrapData(CNWSPlayer*, uint32_t, CNWSCreature*, int32_t);
    int32_t SendServerToPlayerGameObjUpdate(CNWSPlayer*);
    int32_t SendServerToPlayerGameObjUpdate(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerGameObjUpdate_ObjControl(uint32_t, uint32_t);
    int32_t SendServerToPlayerGameObjUpdateFloatyText(CNWSPlayer*, uint32_t, uint32_t);
    int32_t SendServerToPlayerGameObjUpdateVisEffect(CNWSPlayer*, uint16_t, uint32_t, uint32_t, unsigned char, unsigned char, Vector, float);
    int32_t SendServerToPlayerGUICharacterSheet_NotPermitted(uint32_t, uint32_t);
    int32_t SendServerToPlayerGuiContainerObject_Status(CNWSPlayer*, uint32_t, int32_t);
    int32_t SendServerToPlayerGuiQuickbar_SetButton(CNWSPlayer*, unsigned char, int32_t);
    int32_t SendServerToPlayerGuiTimingEvent(CNWSPlayer*, int32_t, unsigned char, uint32_t);
    int32_t SendServerToPlayerInventory_ConfirmDrop(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_Drop(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_DropCancel(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_Equip(uint32_t, uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_EquipCancel(uint32_t, uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_LearnScroll(uint32_t, uint32_t, unsigned char);
    int32_t SendServerToPlayerInventory_Pickup(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_PickupCancel(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_RepositoryMove(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_RepositoryMoveCancel(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_SelectPage(uint32_t, unsigned char);
    int32_t SendServerToPlayerInventory_SelectPanel(uint32_t, unsigned char);
    int32_t SendServerToPlayerInventory_Unequip(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerInventory_UnequipCancel(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerJournalAddQuest(CNWSPlayer*, CExoString, int32_t, uint32_t, uint16_t, int32_t, uint32_t, uint32_t, CExoLocString, CExoLocString);
    int32_t SendServerToPlayerJournalAddWorld(CNWSPlayer*, int32_t, CExoString, CExoString, uint32_t, uint32_t);
    int32_t SendServerToPlayerJournalAddWorldStrref(CNWSPlayer*, uint32_t, uint32_t, uint32_t, uint32_t);
    int32_t SendServerToPlayerJournalDeleteWorld(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerJournalDeleteWorldAll(CNWSPlayer*);
    int32_t SendServerToPlayerJournalDeleteWorldStrref(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerJournalFullUpdate(CNWSPlayer*);
    int32_t SendServerToPlayerJournalFullUpdateNotNeeded(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerJournalRemoveQuest(CNWSPlayer*, CExoString);
    int32_t SendServerToPlayerJournalSetQuestPicture(CNWSPlayer*, CExoString, int32_t);
    int32_t SendServerToPlayerJournalUpdated(CNWSPlayer*, int32_t, int32_t, CExoLocString);
    int32_t SendServerToPlayerLevelUp_Begin(uint32_t, CNWSCreature*);
    int32_t SendServerToPlayerLevelUp_Confirmation(uint32_t, int32_t);
    int32_t SendServerToPlayerLoadBar_EndStallEvent(uint32_t, uint32_t);
    int32_t SendServerToPlayerLoadBar_StartStallEvent(uint32_t);
    int32_t SendServerToPlayerLoadBar_UpdateStallEvent(uint32_t, uint32_t);
    int32_t SendServerToPlayerLogin_CharacterQuery(CNWSPlayer*, unsigned char&, int32_t*, unsigned char*, uint32_t&);
    int32_t SendServerToPlayerLogin_Confirm(uint32_t);
    int32_t SendServerToPlayerLogin_Fail(uint32_t, uint32_t);
    int32_t SendServerToPlayerLogin_GetWaypoint(uint32_t);
    int32_t SendServerToPlayerLogin_NeedCharacter(uint32_t);
    int32_t SendServerToPlayerMapPinAdded(CNWSPlayer*, Vector, CExoString, uint32_t);
    int32_t SendServerToPlayerMapPinCreated(CNWSPlayer*, uint32_t, Vector, CExoLocString, int32_t);
    int32_t SendServerToPlayerMapPinEnabled(CNWSPlayer*, uint32_t, int32_t);
    int32_t SendServerToPlayerMessage(uint32_t, unsigned char, unsigned char, unsigned char*, uint32_t);
    int32_t SendServerToPlayerModule_DumpPlayer(CNWSPlayer*);
    int32_t SendServerToPlayerModule_EndGame(uint32_t, const CExoString&);
    int32_t SendServerToPlayerModule_EndStartNewModule(int32_t);
    int32_t SendServerToPlayerModule_ExportReply(CNWSPlayer*);
    int32_t SendServerToPlayerModule_Info(uint32_t);
    int32_t SendServerToPlayerModule_Loading(CNWSPlayer*);
    int32_t SendServerToPlayerModule_SaveGameStatus(unsigned char);
    int32_t SendServerToPlayerModule_SetPauseState(unsigned char, int32_t);
    int32_t SendServerToPlayerModule_StartStartNewModule();
    int32_t SendServerToPlayerModuleUpdate_Time(CNWSPlayer*, unsigned char, uint32_t, uint32_t, uint32_t, uint32_t, unsigned char, uint32_t);
    int32_t SendServerToPlayerOpenStoreInventory(CNWSPlayer*, uint32_t, unsigned char);
    int32_t SendServerToPlayerParty_Invite(uint32_t, uint32_t);
    int32_t SendServerToPlayerParty_List(uint32_t, int32_t, uint32_t*, unsigned char, uint32_t);
    int32_t SendServerToPlayerParty_TransferObjectControl(uint32_t, uint32_t, uint32_t);
    int32_t SendServerToPlayerPartyBar_PanelButtonFlash(uint32_t, unsigned char, int32_t);
    int32_t SendServerToPlayerPlaceableUpdate_Useable(CNWSPlaceable*);
    int32_t SendServerToPlayerPlayerList_Add(uint32_t, CNWSPlayer*);
    int32_t SendServerToPlayerPlayerList_All(CNWSPlayer*);
    int32_t SendServerToPlayerPlayerList_Delete(uint32_t, CNWSPlayer*);
    int32_t SendServerToPlayerPlayerList_ReauthorizeCDKey(uint32_t, const CExoString&, const CExoString&);
    int32_t SendServerToPlayerPlayModuleCharacterListResponse(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerPolymorph(CNWSPlayer*, uint32_t, int32_t, int32_t);
    int32_t SendServerToPlayerPopUpGUIPanel(uint32_t, int32_t, int32_t, int32_t, int32_t, CExoString);
    int32_t SendServerToPlayerPVP_Attitude_Change(uint32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerQuickChat(uint32_t, uint32_t, uint16_t);
    int32_t SendServerToPlayerQuickChatMessage(uint32_t, uint16_t);
    int32_t SendServerToPlayerSafeProjectile(CNWSPlayer*, uint32_t, uint32_t, Vector, Vector, uint32_t, unsigned char, uint32_t, unsigned char, unsigned char, unsigned char);
    int32_t SendServerToPlayerSaveLoad_Status(CNWSPlayer*, unsigned char, uint32_t);
    int32_t SendServerToPlayerServerStatus_Status(uint32_t);
    int32_t SendServerToPlayerSetCustomToken(uint32_t, int32_t, const CExoString&);
    int32_t SendServerToPlayerSetCustomTokenList(uint32_t);
    int32_t SendServerToPlayerShutDownServer(uint32_t, uint32_t);
    int32_t SendServerToPlayerSoundObject_ChangePosition(CNWSPlayer*, uint32_t, Vector);
    int32_t SendServerToPlayerSoundObject_ChangeVolume(CNWSPlayer*, uint32_t, int32_t);
    int32_t SendServerToPlayerSoundObject_Play(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerSoundObject_Stop(CNWSPlayer*, uint32_t);
    int32_t SendServerToPlayerStoreConfirmTransaction(CNWSPlayer*, int32_t, uint32_t, int32_t);
    int32_t SendServerToPlayerStringMessage(uint32_t, unsigned char, CExoString);
    int32_t SendServerToPlayerUpdateActiveItemProperties(CNWSPlayer*, CNWSItem*);
    int32_t SendServerToPlayerUpdateActiveItemPropertiesUses(CNWSPlayer*, uint32_t, unsigned char, unsigned char, unsigned char*);
    int32_t SendServerToPlayerUpdateBlackoutEffect(CNWSPlayer*, int32_t);
    int32_t SendServerToPlayerUpdateCharResponse(CNWSPlayer*, unsigned char, CResRef);
    int32_t SendServerToPlayerUpdateFogAmount(unsigned char, unsigned char, uint32_t);
    int32_t SendServerToPlayerUpdateFogColor(uint32_t, uint32_t, uint32_t);
    int32_t SendServerToPlayerUpdateItemHidden(CNWSPlayer*, CNWSItem*);
    int32_t SendServerToPlayerUpdateItemName(CNWSPlayer*, CNWSItem*);
    int32_t SendServerToPlayerUpdateSkyBox(int32_t, uint32_t);
    int32_t SendServerToPlayerVoiceChat_Play(CNWSPlayer*, uint32_t, unsigned char);
    int32_t SendServerToPlayerWhirlwindAttack(CNWSPlayer*, CNWSCreature*);
    int32_t SendServerToPlayerWhirlwindAttackDamage(CNWSPlayer*, CNWSCreature*);
    void SendServerToServerAdminBannedList(uint32_t);
    int32_t SendServerToServerAdminMessage(uint32_t, CExoString);
    void SendServerToServerAdminModuleList(uint32_t);
    void SendServerToServerAdminPlayerList(uint32_t);
    void SendServerToServerAdminPortalList(uint32_t);
    void SendServerToServerAdminSaveGameList(uint32_t);
    void SendServerToServerAdminSaveStatus(uint32_t, unsigned char);
    void SendServerToServerAdminServerSettings(uint32_t);
    void SendServerToServerAdminServerStatus(uint32_t);
    CNWSPlayerLUOSortedObjectList* SortObjectsForGameObjectUpdate(CNWSPlayer*, CNWSObject*, CGameObjectArray*, int32_t*);
    void StoreValuesInLastPlayerUpdateObject(CNWSPlayer*, CNWSPlayerLastUpdateObject*, CLastUpdateObject*, uint16_t);
    void StoreValuesInLastUpdateObject(CNWSPlayer*, CLastUpdateObject*, CNWSObject*, uint32_t, uint32_t);
    void StoreValuesInLastUpdatePartyObject(CNWSCreature*, CLastUpdatePartyObject*, CNWSCreature*, uint32_t);
    void TestObjectUpdateDifferences(CNWSPlayer*, CNWSObject*, CLastUpdateObject**, uint32_t*, uint32_t*);
    int32_t TestObjectVisible(CNWSObject*, CNWSObject*);
    void TestPartyObjectUpdateDifferences(CNWSPlayer*, CNWSCreature*, CLastUpdatePartyObject**, uint32_t*);
    void TestPlayerUpdateDifferences(CNWSPlayer*, CNWSPlayerLastUpdateObject*, CLastUpdateObject*, uint16_t&);
    void UpdateLastUpdate_GuiEffectIcons(CNWSCreature*, CExoArrayListTemplatedCEffectIconObjectPtr*, int32_t);
    void UpdateLastUpdateActionQueue(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    void UpdateLastUpdateAutoMap(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    void UpdateLastUpdateInventory(CNWSPlayer*, uint32_t, CNWSPlayerInventoryGUI*);
    void UpdateLastUpdateObject(CNWSPlayer*, CNWSObject*, CLastUpdateObject*, uint32_t);
    void UpdateLastUpdateObjectAppearance(CNWSObject*, CLastUpdateObject*, uint32_t);
    void UpdateLastUpdateVisibilityList(CNWSCreature*, CNWSPlayerLastUpdateObject*);
    void WriteCExoLocStringServer(CExoLocString&, unsigned char);
    void WriteGameObjUpdate_CharacterSheet(CNWSPlayer*, uint32_t);
    int32_t WriteGameObjUpdate_DungeonMasterAIState(CNWSPlayer*);
    void WriteGameObjUpdate_MajorGUIPanels(CNWSPlayer*);
    void WriteGameObjUpdate_MajorGUIPanels_HenchmanInventoryData(CNWSPlayer*);
    void WriteGameObjUpdate_MajorGUIPanels_Inventory(CNWSPlayer*, CNWSPlayerInventoryGUI*);
    void WriteGameObjUpdate_MinorGUIPanels(CNWSPlayer*);
    int32_t WriteGameObjUpdate_PartyAIState(CNWSPlayer*);
    void WriteGameObjUpdate_PlayerUpdate(CNWSPlayer*, CNWSPlayerLastUpdateObject*, CLastUpdateObject*, uint16_t);
    void WriteGameObjUpdate_UpdateAppearance(CNWSObject*, CLastUpdateObject*, uint32_t);
    void WriteGameObjUpdate_UpdateObject(CNWSPlayer*, CNWSObject*, CLastUpdateObject*, uint32_t, uint32_t);
    void WriteGameObjUpdate_UpdateQuickbarItemUseCount(CNWSObject*, CLastUpdateObject*);
    void WriteGameObjUpdate_WorkRemaining(CNWSObject*, CNWSArea*, int32_t, int32_t);
    void WriteGameObjUpdate_WriteInventorySlotAdd(CNWSCreature*, CNWSItem*, uint32_t);
    void WriteGameObjUpdate_WriteInventorySlotDelete(CNWSCreature*, uint32_t);
    void WriteGameObjUpdate_WriteInventorySlotUpdate(uint32_t, uint32_t);
    void WriteGuiEffectIconsUpdate(CNWSCreature*, CExoArrayListTemplatedCEffectIconObjectPtr*, int32_t);
    void WriteOBJECTIDServer(uint32_t);
    void WriteRepositoryUpdate(CNWSPlayer*, CNWSObject*, CItemRepository*, CNWSPlayerLUOInventory*, unsigned char, char, unsigned char);
    void WriteStoreInventoryUpdate(CNWSPlayer*, CNWSStore*);
};

void CNWSMessage__CNWSMessageCtor__0(CNWSMessage* thisPtr);
void CNWSMessage__CNWSMessageDtor__0(CNWSMessage* thisPtr);
void CNWSMessage__AddActiveItemPropertiesToMessage(CNWSMessage* thisPtr, CNWSItem*, CNWSCreature*);
void CNWSMessage__AddAreaOfEffectObjectToMessage(CNWSMessage* thisPtr, CNWSAreaOfEffectObject*);
void CNWSMessage__AddDoorAppearanceToMessage(CNWSMessage* thisPtr, CNWSDoor*);
void CNWSMessage__AddItemAppearanceToMessage(CNWSMessage* thisPtr, CNWSItem*);
void CNWSMessage__AddPlaceableAppearanceToMessage(CNWSMessage* thisPtr, CNWSPlaceable*);
void CNWSMessage__AddTriggerGeometryToMessage(CNWSMessage* thisPtr, CNWSTrigger*);
void CNWSMessage__AssignCreatureLists(CNWSMessage* thisPtr, CExoArrayListTemplatedunsignedlong*, CExoArrayListTemplatedunsignedlong*);
void CNWSMessage__AssignVisualEffectLists(CNWSMessage* thisPtr, CExoArrayListTemplatedCLoopingVisualEffectPtr*, CExoArrayListTemplatedCLoopingVisualEffectPtr*);
int32_t CNWSMessage__CompareCreatureLists(CNWSMessage* thisPtr, CExoArrayListTemplatedunsignedlong*, CExoArrayListTemplatedunsignedlong*);
int32_t CNWSMessage__CompareVisualEffectLists(CNWSMessage* thisPtr, CExoArrayListTemplatedCLoopingVisualEffectPtr*, CExoArrayListTemplatedCLoopingVisualEffectPtr*);
uint32_t CNWSMessage__ComputeAppearanceUpdateRequired(CNWSMessage* thisPtr, CNWSObject*, CLastUpdateObject*);
int32_t CNWSMessage__ComputeGameObjectUpdateForCategory(CNWSMessage* thisPtr, uint32_t, uint32_t, CNWSPlayer*, CNWSObject*, CGameObjectArray*, CNWSPlayerLUOSortedObjectList*, int32_t);
void CNWSMessage__ComputeGameObjectUpdateForObject(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CGameObjectArray*, uint32_t);
void CNWSMessage__ComputeGameObjectUpdateForYourself(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CGameObjectArray*, uint32_t);
void CNWSMessage__ComputeGameObjectUpdateForYourselfToo(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CGameObjectArray*, uint32_t);
int32_t CNWSMessage__ComputeInventoryUpdateRequired(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, CNWSPlayerInventoryGUI*);
int32_t CNWSMessage__ComputeLastUpdate_ActionQueue(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
uint16_t CNWSMessage__ComputeLastUpdate_AssociateState(CNWSMessage* thisPtr, CNWSCreature*);
int32_t CNWSMessage__ComputeLastUpdate_AutoMap(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
int32_t CNWSMessage__ComputeLastUpdate_CompareSpellLikeAbility(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
int32_t CNWSMessage__ComputeLastUpdate_GuiEffectIcons(CNWSMessage* thisPtr, CNWSCreature*, CExoArrayListTemplatedCEffectIconObjectPtr*, int32_t);
int32_t CNWSMessage__ComputeLastUpdate_GuiFeats(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
int32_t CNWSMessage__ComputeLastUpdate_GuiKnownSpells(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
int32_t CNWSMessage__ComputeLastUpdate_GuiKnownSpellUses(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
int32_t CNWSMessage__ComputeLastUpdate_GuiMemorizedSpells(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
int32_t CNWSMessage__ComputeLastUpdate_GuiNumberMemorizedSpells(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
uint32_t CNWSMessage__ComputeLastUpdate_GuiSkills(CNWSMessage* thisPtr, CNWSCreature*);
uint32_t CNWSMessage__ComputeLastUpdate_PlayerState(CNWSMessage* thisPtr, CNWSCreature*);
void CNWSMessage__ComputeLastUpdate_StoreUpdateSpellLikeAbility(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
void CNWSMessage__ComputeLastUpdate_WriteSpellLikeAbility(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
uint32_t CNWSMessage__ComputeNumAutoMapUpdatesRequired(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*, uint32_t*);
int32_t CNWSMessage__ComputeQuickbarItemUseCountUpdateRequired(CNWSMessage* thisPtr, CNWSObject*, CLastUpdateObject*);
int32_t CNWSMessage__ComputeRepositoryUpdateRequired(CNWSMessage* thisPtr, CNWSPlayer*, CExoLinkedListNode*, CExoLinkedListNode*);
uint32_t CNWSMessage__ComputeUpdateRequired(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CLastUpdateObject*, int32_t);
int32_t CNWSMessage__ComputeVisibilityLists(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
CLastUpdateObject* CNWSMessage__CreateNewLastUpdateObject(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, uint32_t*, uint32_t*);
void CNWSMessage__DeleteLastUpdateObjectsForObject(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
void CNWSMessage__DeleteLastUpdateObjectsInOtherAreas(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__GetLocStringServer(uint32_t, CExoLocString, CExoLocString, CExoString&, float&, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerAreaMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerBarter(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerBarter_AcceptTrade(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_AddItem(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_CloseBarter(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_LockList(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_MoveItem(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_RemoveItem(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_StartBarter(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerBarter_Window(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerCharacterDownload(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerCharacterSheetMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerCharListMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerChatMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerCheatMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerCutscene(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerDialogMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerDungeonMasterMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, int32_t);
int32_t CNWSMessage__HandlePlayerToServerGameObjectUpdate(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerGoldMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerGroupInputMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerGroupInputWalkToWaypoint(CNWSMessage* thisPtr, CNWSPlayer*, CNWSCreature*, uint32_t, float, float, float, unsigned char, int32_t, int32_t, uint32_t);
int32_t CNWSMessage__HandlePlayerToServerGuiContainerMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerGuiInventoryMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerGuiQuickbar(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerGuiQuickbar_SetButton(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerInputAbortDriveControl(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerInputCancelGuiTimingEvent(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerInputDriveControl(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerInputMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerInputWalkToWaypoint(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerInventoryMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerJournalMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerLevelUpMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerLoginMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerMapPinChangePin(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerMapPinDestroyMapPin(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerMapPinMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerMapPinSetMapPinAt(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerMessage(CNWSMessage* thisPtr, uint32_t, unsigned char*, uint32_t);
int32_t CNWSMessage__HandlePlayerToServerModuleMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerParty(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerPlayerDeath(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerPlayerList(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerPlayModuleCharacterList(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerPlayModuleCharacterList_Start(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerPlayModuleCharacterList_Stop(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__HandlePlayerToServerPortal(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerPVPListOperations(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerQuickChatMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerServerChatMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerServerStatusMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerShutDownServer(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandlePlayerToServerStoreMessage(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__HandleServerAdminToServerMessage(CNWSMessage* thisPtr, uint32_t, unsigned char*, uint32_t);
int32_t CNWSMessage__HasValidString(CNWSMessage* thisPtr, CExoLocString&, unsigned char);
int32_t CNWSMessage__ParseGetBool(CNWSMessage* thisPtr, unsigned char*, uint32_t, int32_t&);
int32_t CNWSMessage__ParseGetString(CNWSMessage* thisPtr, unsigned char*, uint32_t, CExoString&, uint32_t);
int32_t CNWSMessage__ParseToken(CNWSMessage* thisPtr, const char*, unsigned char**, uint32_t&, int32_t);
uint32_t CNWSMessage__ReadOBJECTIDServer(CNWSMessage* thisPtr);
uint32_t CNWSMessage__SelectCategoryForGameObject(CNWSMessage* thisPtr, CGameObject*, CNWSObject*);
int32_t CNWSMessage__SendPlayerToServerGuiInventory_Status(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, uint32_t);
int32_t CNWSMessage__SendServerPlayerItemUpdate_DestroyItem(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToAllPlayersCreatureUpdate_StripEquippedItems(CNWSMessage* thisPtr, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerActivatePortal(CNWSMessage* thisPtr, uint32_t, CExoString, CExoString, CExoString, int32_t);
int32_t CNWSMessage__SendServerToPlayerAIActionPlaySound(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerAmbientBattleMusicChange(CNWSMessage* thisPtr, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientBattleMusicPlay(CNWSMessage* thisPtr, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientMusicChangeTrack(CNWSMessage* thisPtr, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientMusicPlay(CNWSMessage* thisPtr, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientMusicSetDelay(CNWSMessage* thisPtr, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientSoundLoopChange(CNWSMessage* thisPtr, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientSoundLoopPlay(CNWSMessage* thisPtr, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerAmbientSoundVolumeChange(CNWSMessage* thisPtr, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerArea_ChangeDayNight(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, float);
int32_t CNWSMessage__SendServerToPlayerArea_ClientArea(CNWSMessage* thisPtr, CNWSPlayer*, CNWSArea*, float, float, float, const Vector&, int32_t);
int32_t CNWSMessage__SendServerToPlayerArea_RecomputeStaticLighting(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerArea_SetName(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerArea_VisualEffect(CNWSMessage* thisPtr, CNWSPlayer*, uint16_t, Vector);
int32_t CNWSMessage__SendServerToPlayerArea_Weather(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, int32_t);
int32_t CNWSMessage__SendServerToPlayerBarterAcceptTrade(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerBarterCloseBarter(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerBarterLockList(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerBarterReject(CNWSMessage* thisPtr, uint32_t, unsigned char, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerBarterStartBarter(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerCamera_ChangeLocation(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, float, float, float, int32_t);
int32_t CNWSMessage__SendServerToPlayerCamera_LockDistance(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerCamera_LockPitch(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerCamera_LockYaw(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerCamera_Restore(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCamera_SetHeight(CNWSMessage* thisPtr, CNWSPlayer*, float);
int32_t CNWSMessage__SendServerToPlayerCamera_SetMode(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char);
int32_t CNWSMessage__SendServerToPlayerCamera_Store(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCCMessage(CNWSMessage* thisPtr, uint32_t, unsigned char, CNWCCMessageData*, CNWSCombatAttackData*);
int32_t CNWSMessage__SendServerToPlayerCharacterDownloadFail(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCharacterDownloadReply(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCharList(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerChat_DM_Silent_Shout(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_DM_Talk(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_DM_Whisper(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_Party(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_ServerTell(CNWSMessage* thisPtr, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_Shout(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_Silent_Shout(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_StrRef(CNWSMessage* thisPtr, uint32_t, uint32_t, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerChat_Talk(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_Tell(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChat_Whisper(CNWSMessage* thisPtr, uint32_t, uint32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerChatMessage(CNWSMessage* thisPtr, unsigned char, uint32_t, CExoString, uint32_t, const CExoString&);
int32_t CNWSMessage__SendServerToPlayerChatMultiLang_Helper(CNWSMessage* thisPtr, uint32_t, unsigned char, uint32_t, CExoLocString, uint32_t, unsigned char, int32_t, const CResRef&, int32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerChatMultiLangMessage(CNWSMessage* thisPtr, unsigned char, uint32_t, CExoLocString, uint32_t, unsigned char, uint32_t*, uint32_t, int32_t, const CResRef&, int32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerChatStrRefMessage(CNWSMessage* thisPtr, unsigned char, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerCheatDebugMode(CNWSMessage* thisPtr, int32_t);
int32_t CNWSMessage__SendServerToPlayerCheatNasty(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerCheatPonyRide(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerCheatRainOfCows(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerCloseStoreInventory(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCombatRoundStarted(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCutscene_BlackScreen(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerCutscene_FadeFromBlack(CNWSMessage* thisPtr, CNWSPlayer*, float);
int32_t CNWSMessage__SendServerToPlayerCutscene_FadeToBlack(CNWSMessage* thisPtr, CNWSPlayer*, float);
int32_t CNWSMessage__SendServerToPlayerCutscene_HideGui(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerCutscene_Status(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerCutscene_StopFade(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerDebugInfo_Area(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDebugInfo_Creature(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDebugInfo_Door(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDebugInfo_Item(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDebugInfo_Placeable(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDebugInfo_Trigger(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDestroyDeathGUI(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDialogClose(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDialogEntry(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t, CExoLocString, uint32_t, unsigned char);
int32_t CNWSMessage__SendServerToPlayerDialogReplies(CNWSMessage* thisPtr, uint32_t, CExoLocString*, uint32_t*, uint32_t, uint32_t, uint32_t, unsigned char, int32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerDialogReplyChosen(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t, CExoLocString, uint32_t, unsigned char, int32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterAreaList__0(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterAreaList__1(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterCreatorLists(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterObjectList(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMastersDifficultyChange(CNWSMessage* thisPtr, int32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterSearchByIdResult(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, int32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterSearchByTagResult(CNWSMessage* thisPtr, CNWSPlayer*, const CExoString&, int32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterUpdatePartyList__0(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerDungeonMasterUpdatePartyList__1(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerExamineGui_CreatureData(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerExamineGui_DoorData(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerExamineGui_ItemData(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerExamineGui_PlaceableData(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerExamineGui_TrapData(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, CNWSCreature*, int32_t);
int32_t CNWSMessage__SendServerToPlayerGameObjUpdate__0(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerGameObjUpdate__1(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerGameObjUpdate_ObjControl(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerGameObjUpdateFloatyText(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerGameObjUpdateVisEffect(CNWSMessage* thisPtr, CNWSPlayer*, uint16_t, uint32_t, uint32_t, unsigned char, unsigned char, Vector, float);
int32_t CNWSMessage__SendServerToPlayerGUICharacterSheet_NotPermitted(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerGuiContainerObject_Status(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerGuiQuickbar_SetButton(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, int32_t);
int32_t CNWSMessage__SendServerToPlayerGuiTimingEvent(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_ConfirmDrop(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_Drop(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_DropCancel(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_Equip(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_EquipCancel(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_LearnScroll(CNWSMessage* thisPtr, uint32_t, uint32_t, unsigned char);
int32_t CNWSMessage__SendServerToPlayerInventory_Pickup(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_PickupCancel(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_RepositoryMove(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_RepositoryMoveCancel(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_SelectPage(CNWSMessage* thisPtr, uint32_t, unsigned char);
int32_t CNWSMessage__SendServerToPlayerInventory_SelectPanel(CNWSMessage* thisPtr, uint32_t, unsigned char);
int32_t CNWSMessage__SendServerToPlayerInventory_Unequip(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerInventory_UnequipCancel(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerJournalAddQuest(CNWSMessage* thisPtr, CNWSPlayer*, CExoString, int32_t, uint32_t, uint16_t, int32_t, uint32_t, uint32_t, CExoLocString, CExoLocString);
int32_t CNWSMessage__SendServerToPlayerJournalAddWorld(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, CExoString, CExoString, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerJournalAddWorldStrref(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, uint32_t, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerJournalDeleteWorld(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerJournalDeleteWorldAll(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerJournalDeleteWorldStrref(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerJournalFullUpdate(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerJournalFullUpdateNotNeeded(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerJournalRemoveQuest(CNWSMessage* thisPtr, CNWSPlayer*, CExoString);
int32_t CNWSMessage__SendServerToPlayerJournalSetQuestPicture(CNWSMessage* thisPtr, CNWSPlayer*, CExoString, int32_t);
int32_t CNWSMessage__SendServerToPlayerJournalUpdated(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, int32_t, CExoLocString);
int32_t CNWSMessage__SendServerToPlayerLevelUp_Begin(CNWSMessage* thisPtr, uint32_t, CNWSCreature*);
int32_t CNWSMessage__SendServerToPlayerLevelUp_Confirmation(CNWSMessage* thisPtr, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerLoadBar_EndStallEvent(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerLoadBar_StartStallEvent(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerLoadBar_UpdateStallEvent(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerLogin_CharacterQuery(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char&, int32_t*, unsigned char*, uint32_t&);
int32_t CNWSMessage__SendServerToPlayerLogin_Confirm(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerLogin_Fail(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerLogin_GetWaypoint(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerLogin_NeedCharacter(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerMapPinAdded(CNWSMessage* thisPtr, CNWSPlayer*, Vector, CExoString, uint32_t);
int32_t CNWSMessage__SendServerToPlayerMapPinCreated(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, Vector, CExoLocString, int32_t);
int32_t CNWSMessage__SendServerToPlayerMapPinEnabled(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerMessage(CNWSMessage* thisPtr, uint32_t, unsigned char, unsigned char, unsigned char*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerModule_DumpPlayer(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerModule_EndGame(CNWSMessage* thisPtr, uint32_t, const CExoString&);
int32_t CNWSMessage__SendServerToPlayerModule_EndStartNewModule(CNWSMessage* thisPtr, int32_t);
int32_t CNWSMessage__SendServerToPlayerModule_ExportReply(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerModule_Info(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerModule_Loading(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerModule_SaveGameStatus(CNWSMessage* thisPtr, unsigned char);
int32_t CNWSMessage__SendServerToPlayerModule_SetPauseState(CNWSMessage* thisPtr, unsigned char, int32_t);
int32_t CNWSMessage__SendServerToPlayerModule_StartStartNewModule(CNWSMessage* thisPtr);
int32_t CNWSMessage__SendServerToPlayerModuleUpdate_Time(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, uint32_t, uint32_t, uint32_t, uint32_t, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerOpenStoreInventory(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, unsigned char);
int32_t CNWSMessage__SendServerToPlayerParty_Invite(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerParty_List(CNWSMessage* thisPtr, uint32_t, int32_t, uint32_t*, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerParty_TransferObjectControl(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerPartyBar_PanelButtonFlash(CNWSMessage* thisPtr, uint32_t, unsigned char, int32_t);
int32_t CNWSMessage__SendServerToPlayerPlaceableUpdate_Useable(CNWSMessage* thisPtr, CNWSPlaceable*);
int32_t CNWSMessage__SendServerToPlayerPlayerList_Add(CNWSMessage* thisPtr, uint32_t, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerPlayerList_All(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerPlayerList_Delete(CNWSMessage* thisPtr, uint32_t, CNWSPlayer*);
int32_t CNWSMessage__SendServerToPlayerPlayerList_ReauthorizeCDKey(CNWSMessage* thisPtr, uint32_t, const CExoString&, const CExoString&);
int32_t CNWSMessage__SendServerToPlayerPlayModuleCharacterListResponse(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerPolymorph(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, int32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerPopUpGUIPanel(CNWSMessage* thisPtr, uint32_t, int32_t, int32_t, int32_t, int32_t, CExoString);
int32_t CNWSMessage__SendServerToPlayerPVP_Attitude_Change(CNWSMessage* thisPtr, uint32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerQuickChat(CNWSMessage* thisPtr, uint32_t, uint32_t, uint16_t);
int32_t CNWSMessage__SendServerToPlayerQuickChatMessage(CNWSMessage* thisPtr, uint32_t, uint16_t);
int32_t CNWSMessage__SendServerToPlayerSafeProjectile(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, uint32_t, Vector, Vector, uint32_t, unsigned char, uint32_t, unsigned char, unsigned char, unsigned char);
int32_t CNWSMessage__SendServerToPlayerSaveLoad_Status(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerServerStatus_Status(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerSetCustomToken(CNWSMessage* thisPtr, uint32_t, int32_t, const CExoString&);
int32_t CNWSMessage__SendServerToPlayerSetCustomTokenList(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToPlayerShutDownServer(CNWSMessage* thisPtr, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerSoundObject_ChangePosition(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, Vector);
int32_t CNWSMessage__SendServerToPlayerSoundObject_ChangeVolume(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerSoundObject_Play(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerSoundObject_Stop(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__SendServerToPlayerStoreConfirmTransaction(CNWSMessage* thisPtr, CNWSPlayer*, int32_t, uint32_t, int32_t);
int32_t CNWSMessage__SendServerToPlayerStringMessage(CNWSMessage* thisPtr, uint32_t, unsigned char, CExoString);
int32_t CNWSMessage__SendServerToPlayerUpdateActiveItemProperties(CNWSMessage* thisPtr, CNWSPlayer*, CNWSItem*);
int32_t CNWSMessage__SendServerToPlayerUpdateActiveItemPropertiesUses(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, unsigned char, unsigned char, unsigned char*);
int32_t CNWSMessage__SendServerToPlayerUpdateBlackoutEffect(CNWSMessage* thisPtr, CNWSPlayer*, int32_t);
int32_t CNWSMessage__SendServerToPlayerUpdateCharResponse(CNWSMessage* thisPtr, CNWSPlayer*, unsigned char, CResRef);
int32_t CNWSMessage__SendServerToPlayerUpdateFogAmount(CNWSMessage* thisPtr, unsigned char, unsigned char, uint32_t);
int32_t CNWSMessage__SendServerToPlayerUpdateFogColor(CNWSMessage* thisPtr, uint32_t, uint32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerUpdateItemHidden(CNWSMessage* thisPtr, CNWSPlayer*, CNWSItem*);
int32_t CNWSMessage__SendServerToPlayerUpdateItemName(CNWSMessage* thisPtr, CNWSPlayer*, CNWSItem*);
int32_t CNWSMessage__SendServerToPlayerUpdateSkyBox(CNWSMessage* thisPtr, int32_t, uint32_t);
int32_t CNWSMessage__SendServerToPlayerVoiceChat_Play(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, unsigned char);
int32_t CNWSMessage__SendServerToPlayerWhirlwindAttack(CNWSMessage* thisPtr, CNWSPlayer*, CNWSCreature*);
int32_t CNWSMessage__SendServerToPlayerWhirlwindAttackDamage(CNWSMessage* thisPtr, CNWSPlayer*, CNWSCreature*);
void CNWSMessage__SendServerToServerAdminBannedList(CNWSMessage* thisPtr, uint32_t);
int32_t CNWSMessage__SendServerToServerAdminMessage(CNWSMessage* thisPtr, uint32_t, CExoString);
void CNWSMessage__SendServerToServerAdminModuleList(CNWSMessage* thisPtr, uint32_t);
void CNWSMessage__SendServerToServerAdminPlayerList(CNWSMessage* thisPtr, uint32_t);
void CNWSMessage__SendServerToServerAdminPortalList(CNWSMessage* thisPtr, uint32_t);
void CNWSMessage__SendServerToServerAdminSaveGameList(CNWSMessage* thisPtr, uint32_t);
void CNWSMessage__SendServerToServerAdminSaveStatus(CNWSMessage* thisPtr, uint32_t, unsigned char);
void CNWSMessage__SendServerToServerAdminServerSettings(CNWSMessage* thisPtr, uint32_t);
void CNWSMessage__SendServerToServerAdminServerStatus(CNWSMessage* thisPtr, uint32_t);
CNWSPlayerLUOSortedObjectList* CNWSMessage__SortObjectsForGameObjectUpdate(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CGameObjectArray*, int32_t*);
void CNWSMessage__StoreValuesInLastPlayerUpdateObject(CNWSMessage* thisPtr, CNWSPlayer*, CNWSPlayerLastUpdateObject*, CLastUpdateObject*, uint16_t);
void CNWSMessage__StoreValuesInLastUpdateObject(CNWSMessage* thisPtr, CNWSPlayer*, CLastUpdateObject*, CNWSObject*, uint32_t, uint32_t);
void CNWSMessage__StoreValuesInLastUpdatePartyObject(CNWSMessage* thisPtr, CNWSCreature*, CLastUpdatePartyObject*, CNWSCreature*, uint32_t);
void CNWSMessage__TestObjectUpdateDifferences(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CLastUpdateObject**, uint32_t*, uint32_t*);
int32_t CNWSMessage__TestObjectVisible(CNWSMessage* thisPtr, CNWSObject*, CNWSObject*);
void CNWSMessage__TestPartyObjectUpdateDifferences(CNWSMessage* thisPtr, CNWSPlayer*, CNWSCreature*, CLastUpdatePartyObject**, uint32_t*);
void CNWSMessage__TestPlayerUpdateDifferences(CNWSMessage* thisPtr, CNWSPlayer*, CNWSPlayerLastUpdateObject*, CLastUpdateObject*, uint16_t&);
void CNWSMessage__UpdateLastUpdate_GuiEffectIcons(CNWSMessage* thisPtr, CNWSCreature*, CExoArrayListTemplatedCEffectIconObjectPtr*, int32_t);
void CNWSMessage__UpdateLastUpdateActionQueue(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
void CNWSMessage__UpdateLastUpdateAutoMap(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
void CNWSMessage__UpdateLastUpdateInventory(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t, CNWSPlayerInventoryGUI*);
void CNWSMessage__UpdateLastUpdateObject(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CLastUpdateObject*, uint32_t);
void CNWSMessage__UpdateLastUpdateObjectAppearance(CNWSMessage* thisPtr, CNWSObject*, CLastUpdateObject*, uint32_t);
void CNWSMessage__UpdateLastUpdateVisibilityList(CNWSMessage* thisPtr, CNWSCreature*, CNWSPlayerLastUpdateObject*);
void CNWSMessage__WriteCExoLocStringServer(CNWSMessage* thisPtr, CExoLocString&, unsigned char);
void CNWSMessage__WriteGameObjUpdate_CharacterSheet(CNWSMessage* thisPtr, CNWSPlayer*, uint32_t);
int32_t CNWSMessage__WriteGameObjUpdate_DungeonMasterAIState(CNWSMessage* thisPtr, CNWSPlayer*);
void CNWSMessage__WriteGameObjUpdate_MajorGUIPanels(CNWSMessage* thisPtr, CNWSPlayer*);
void CNWSMessage__WriteGameObjUpdate_MajorGUIPanels_HenchmanInventoryData(CNWSMessage* thisPtr, CNWSPlayer*);
void CNWSMessage__WriteGameObjUpdate_MajorGUIPanels_Inventory(CNWSMessage* thisPtr, CNWSPlayer*, CNWSPlayerInventoryGUI*);
void CNWSMessage__WriteGameObjUpdate_MinorGUIPanels(CNWSMessage* thisPtr, CNWSPlayer*);
int32_t CNWSMessage__WriteGameObjUpdate_PartyAIState(CNWSMessage* thisPtr, CNWSPlayer*);
void CNWSMessage__WriteGameObjUpdate_PlayerUpdate(CNWSMessage* thisPtr, CNWSPlayer*, CNWSPlayerLastUpdateObject*, CLastUpdateObject*, uint16_t);
void CNWSMessage__WriteGameObjUpdate_UpdateAppearance(CNWSMessage* thisPtr, CNWSObject*, CLastUpdateObject*, uint32_t);
void CNWSMessage__WriteGameObjUpdate_UpdateObject(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CLastUpdateObject*, uint32_t, uint32_t);
void CNWSMessage__WriteGameObjUpdate_UpdateQuickbarItemUseCount(CNWSMessage* thisPtr, CNWSObject*, CLastUpdateObject*);
void CNWSMessage__WriteGameObjUpdate_WorkRemaining(CNWSMessage* thisPtr, CNWSObject*, CNWSArea*, int32_t, int32_t);
void CNWSMessage__WriteGameObjUpdate_WriteInventorySlotAdd(CNWSMessage* thisPtr, CNWSCreature*, CNWSItem*, uint32_t);
void CNWSMessage__WriteGameObjUpdate_WriteInventorySlotDelete(CNWSMessage* thisPtr, CNWSCreature*, uint32_t);
void CNWSMessage__WriteGameObjUpdate_WriteInventorySlotUpdate(CNWSMessage* thisPtr, uint32_t, uint32_t);
void CNWSMessage__WriteGuiEffectIconsUpdate(CNWSMessage* thisPtr, CNWSCreature*, CExoArrayListTemplatedCEffectIconObjectPtr*, int32_t);
void CNWSMessage__WriteOBJECTIDServer(CNWSMessage* thisPtr, uint32_t);
void CNWSMessage__WriteRepositoryUpdate(CNWSMessage* thisPtr, CNWSPlayer*, CNWSObject*, CItemRepository*, CNWSPlayerLUOInventory*, unsigned char, char, unsigned char);
void CNWSMessage__WriteStoreInventoryUpdate(CNWSMessage* thisPtr, CNWSPlayer*, CNWSStore*);

}

}
