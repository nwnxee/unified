srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

DISTORM3_DIR = $(top_srcdir)/distorm
VPATH = $(DISTORM3_DIR)/src:$(srcdir):$(top_srcdir)/include

CC = @CC@
CFLAGS = @CFLAGS@ @PIC_CFLAGS@ -g -I. -I$(top_srcdir)/include -I$(DISTORM3_DIR)/include
LIBS = @LIBS@
LINK_SHARED = @LINK_SHARED@

@IF_WIN32@LIBS += -lpsapi
@IF_OSX@LDFLAGS += -install_name @rpath/libfunchook.dylib

FUNCHOOK_OBJS = \
	os_func.o \
	os_func_@FUNCHOOK_OS@.o \
	printf_base.o \
	funchook.o \
	funchook_io.o \
	funchook_x86.o \
	funchook_@FUNCHOOK_OS@.o

@IF_LINUX@FUNCHOOK_OBJS += funchook_syscall.o
@IF_OSX@FUNCHOOK_OBJS += funchook_syscall.o

DISTORM3_OBJS = \
	mnemonics.o \
	wstring.o \
	textdefs.o \
	prefix.o \
	operands.o \
	insts.o \
	instructions.o \
	distorm.o \
	decoder.o

HEADERS = \
	funchook.h \
	funchook_internal.h \
	os_func.h

OBJS = $(FUNCHOOK_OBJS) $(DISTORM3_OBJS)

all: @LIBFUNCHOOK_SO@

check:
	cd ../test && $(MAKE) check

@LIBFUNCHOOK_SO@: $(OBJS)
	$(LINK_SHARED) $(LDFLAGS) -o @LIBFUNCHOOK_SO@ $(OBJS) $(LIBS)

funchook.o: funchook.c $(HEADERS)
funchook_linux.o: funchook_linux.c $(HEADERS)
funchook_windows.o: funchook_windows.c $(HEADERS)
funchook_x86.o: funchook_x86.c $(HEADERS)
os_func.o: os_func.c os_func.h printf_base.h
printf_base.o: printf_base.c printf_base.h
	$(CC) $(CFLAGS) -c -o $@ $< -DPFB_NO_EXTERNAL_FUNC -DPFB_MSVC_FORMAT

# suppress warning: missing braces around initializer [-Wmissing-braces]
insts.o: insts.c
	$(CC) $(CFLAGS) -c -o $@ $< -Wno-missing-braces

clean:
	$(RM) @LIBFUNCHOOK_SO@ $(OBJS)

Makefile config.h: $(srcdir)/Makefile.in $(srcdir)/config.h.in $(top_builddir)/config.status
	cd $(top_builddir) && ./config.status
